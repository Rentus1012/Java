1. 다중 상속은 원칙적으로 불가능한데, 그 대안으로 인터페이스라는 것을 배웠다.
인터페이스 말고 다른 대안이 있을까??

일반 적인 상속	public class SportCar extends Car
인터페이싱(기능 추가)	public class TV implements RemotrControl, Comparable

다중 상속을 하고 싶은 이유
- 클래스를 상속받아 기능을 쉽게 구현.
상속 + 인터페이싱		public class Radio extends Electric implements RemoteControl


2. 추상화를 사용하지 않을때가 더 좋은 점이 있을까?
-미리 만들어진 인터페이스를 사용한다면.
정의한 추상 메서드를 모두(코드) 구현해야지 사용 가능.

5개라면 5개 모두 구현해야지 모두 사용 가능.
--> 이 경우 인터페이스를 사용하지 않고 클래스로 구현된 대체제를 상속한다.
    마우스 움직임에 대한 리스너(인터페이시스)
    대신 마우스 움직임에 대한 어댑터(클래스)

3.(익명 클래스로 만든) 객체 vs. (클래스로 만든)객체
-일반적인 클래스
public class 클래스 이름{
    몸체 (필드 선언)...
} 

-익명 클래스: 클래스 이름이 없다.
몸체만 있음.
Car myCar = new Car({
    그런거임.
});

4. 정적 메서드 말고, 동적 메서드를 사용하는 방법이 뭘까?

정적<--> 인스턴트

정적 메서드(){static}
메서드() = 인스턴트 메서드

5. 개발환경에 대해서

통일성이 중요함.

굳이 ec를 쓰는 이유?? 초보자용임.

초반에는 ec를 배우는 이유도 초반에 익숙해지라고 하는것임.