1. 클래스에서 필드의 데이터형이 boolean, 왜 변수명이 is---로 시작하는지?

boolean ison => is 는 있다,  참이라면 True, 아니면 false

2. private 클래스를 사용할려면 어케함...?(다른 클래스에서)

private  필드를 접근할수 있는 접근자/메서드를 설정, 간접적으로 사용 가능.

3. UML 네서 보면 사용자 정의 클래스와 그 클래스를 사용하는 테스트 클래스가 있는데, 어떤걸 먼저 만들어야 함?

사용자 정의 -> 내가 만드는것. ex) 강아지 클래스

테스트: 사용자 정의 클래스가 잘 작동하는지 테스트 하는것.

main()
{
    Scanner.sc = new Scanner(System.in);
    Lion lion = new Lion(); // 객체 만들기
    lion.move(); //알고리즘 수행
}

-탑다운: 형태를 만들고, 속을 채우는 방식. 
    클래스(속성, 동작())

class Lion
{
    속성1, 2,3
    동작1{}
    동작2{}
    .
    .
    .
}

4. 객체지향의 대표적인 예 4가지

추상화: 모델을 단순하게, 필요한것만 만들자.
상속: 부모가 한 일을 자식이 안해도 됨.
다형성: 클래스에 따라서 다른 반응을 할수 있도록 프로그램을 작성
갭슐화:ㅣ 클래스를 보델링 하기 위해서 필요한 정보를 속석, 동작으로 구분, 이를 한데 묶어서 클래스로 정의. 이걸 캡슐화.



메소드 오버로딩


같은 이름의 메소드가 있음.
하지만 쓰임이 다름

이걸 중복정의라 함.

생성자: 객체를 생성할때, 초기값을 설정하는 메소드 
Pizza obj1 = new Pizza;
//obj1을 생성하고, 선언한다.
Pizza obj2 = new Pizza(24, "포테이토");
// size는 24,  포테이토로 초기화.ㅍ 


접근자: 객체의 필드값을 읽어오는 메서드
설정자: 객체의 필드값을 바꾸는 메소드



this 참조 변수

-현재 호출한 자신의 객체를 지칭.

--> ㅇ미시 변수와 필드의 이름이 동일하면
-> 구분을 위해서 this.필드명으로 사용.

this ()(매개변수가 있어도 상관 x)
this(int a, int b ...)
-현재클래스의 생성자를 호출한다.